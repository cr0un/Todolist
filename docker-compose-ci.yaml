version: "3.10"
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: cr0un/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    build:
      context: .
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./Todolist:/Todolist/Todolist
      - ./Todolist/staticfiles:/Todolist/staticfiles
      - ./django_media:/Todolist/django_media

#  front:
#    build:
#      context: ./front
#      dockerfile: docker/Dockerfile
#    depends_on:
#      api:
#        condition: service_started
#    ports:
#      - "8080:80"
#    environment:
#      - REACT_APP_API_URL=http://api:8080/
##      - REACT_APP_API_URL=/api

  front:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_started
#    volumes:
#      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
#      - django_static:/usr/share/nginx/html/static
#    environment:
#        - REACT_APP_API_URL=http://localhost:8000/api/
#        - REACT_APP_API_URL=/api
#        - REACT_APP_API_URL=http://api:8000/api/






