name: Build and deploy
on:
  push:
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      GITHUB_REF_NAME: ${{ github.ref_name }}
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t cr0un/todolist:${{ github.ref_name }}-${{ github.run_id }} .
      - name: docker login
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: docker push
        run: docker push cr0un/todolist:${{ github.ref_name }}-${{ github.run_id }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: postgres
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      GITHUB_REF_NAME: ${{ needs.build_and_push.outputs.GITHUB_REF_NAME }}
      GITHUB_RUN_ID: ${{ needs.build_and_push.outputs.GITHUB_RUN_ID }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: Prepare deployment folder
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "/home/deploy/todolist/"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d